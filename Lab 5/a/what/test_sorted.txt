#include "libs/data_structures/ordered_array/ordered_array.h"
#include <assert.h>
#include <malloc.h>

void test_ordered_array_set_in1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    assert(ordered_array_set_in(&set, 2) == 1);
    ordered_array_set_delete(set);
}

void test_ordered_array_set_in2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    assert(ordered_array_set_in(&set, 1) == 0);
    ordered_array_set_delete(set);
}

void test_ordered_array_set_in3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    assert(ordered_array_set_in(&set, 8) == 4);
    ordered_array_set_delete(set);
}

void test_ordered_array_set_in4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    assert(ordered_array_set_in(&set, 4) == 5);
    ordered_array_set_delete(set);
}


void test_ordered_array_set_in() {
    test_ordered_array_set_in1();
    test_ordered_array_set_in2();
    test_ordered_array_set_in3();
    test_ordered_array_set_in4();
}

//============================================================================
void test_ordered_array_set_isSubset1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set subset = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isSubset(subset, set));
    ordered_array_set_delete(set);
    ordered_array_set_delete(subset);

}

void test_ordered_array_set_isSubset2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set subset = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5}, 4);
    assert(ordered_array_set_isSubset(subset, set));
    ordered_array_set_delete(set);
    ordered_array_set_delete(subset);

}

void test_ordered_array_set_isSubset3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set subset = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isSubset(subset, set));
    ordered_array_set_delete(set);
    ordered_array_set_delete(subset);

}

void test_ordered_array_set_isSubset4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set subset = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 7}, 5);
    assert(ordered_array_set_isSubset(subset, set) == false);
    ordered_array_set_delete(set);
    ordered_array_set_delete(subset);

}

void test_ordered_array_set_isSubset5() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set subset = ordered_array_set_create_from_array((int[]) {9, 45, 22, 46, 73}, 5);
    assert(ordered_array_set_isSubset(subset, set) == false);
    ordered_array_set_delete(set);
    ordered_array_set_delete(subset);

}

void test_ordered_array_set_isSubset() {
    test_ordered_array_set_isSubset1();
    test_ordered_array_set_isSubset2();
    test_ordered_array_set_isSubset3();
    test_ordered_array_set_isSubset4();
    test_ordered_array_set_isSubset5();
}

//============================================================================
void test_ordered_array_set_insert1() {
    ordered_array_set set = ordered_array_set_create(10);
    ordered_array_set_insert(&set, 1);
    ordered_array_set_insert(&set, 2);
    ordered_array_set_insert(&set, 5);
    ordered_array_set_insert(&set, 3);
    ordered_array_set_insert(&set, 8);
    ordered_array_set_insert(&set, 6);
    ordered_array_set_insert(&set, 6);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 6, 8}, 6);
    assert(ordered_array_set_isEqual(set, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_insert() {
    test_ordered_array_set_insert1();
}

//============================================================================
void ordered_array_set_delete1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set_deleteElement(&set, 1);
    ordered_array_set_deleteElement(&set, 2);
    ordered_array_set_deleteElement(&set, 8);
    ordered_array_set_deleteElement(&set, 6);
    ordered_array_set_deleteElement(&set, 7);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {3, 5}, 2);
    assert(ordered_array_set_isEqual(set, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_delete() {
    ordered_array_set_delete1();
}

//============================================================================
void ordered_array_set_union1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 5, 9, 12, 21}, 5);
    ordered_array_set resultSet = ordered_array_set_union(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8, 9, 12, 21}, 8);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void ordered_array_set_union2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_union(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void ordered_array_set_union3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_union(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void ordered_array_set_union4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set resultSet = ordered_array_set_union(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_union() {
    ordered_array_set_union1();
    ordered_array_set_union2();
    ordered_array_set_union3();
    ordered_array_set_union4();
}

//============================================================================
void test_ordered_array_set_intersection1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set resultSet = ordered_array_set_intersection(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_intersection2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_intersection(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_intersection3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_intersection(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_intersection4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8, 9, 11}, 7);
    ordered_array_set resultSet = ordered_array_set_intersection(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_intersection5() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {77, 85, 45, 65, 79}, 5);
    ordered_array_set resultSet = ordered_array_set_intersection(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_intersection() {
    test_ordered_array_set_intersection1();
    test_ordered_array_set_intersection2();
    test_ordered_array_set_intersection3();
    test_ordered_array_set_intersection4();
    test_ordered_array_set_intersection5();
}

//============================================================================
void test_ordered_array_set_difference1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {77, 85, 45, 65, 79}, 5);
    ordered_array_set resultSet = ordered_array_set_difference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_difference2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_difference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_difference3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_difference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_difference4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {6, 2, 5, 3, 8, 7}, 6);
    ordered_array_set resultSet = ordered_array_set_difference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1}, 1);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_difference5() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set resultSet = ordered_array_set_difference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_difference() {
    test_ordered_array_set_difference1();
    test_ordered_array_set_difference2();
    test_ordered_array_set_difference3();
    test_ordered_array_set_difference4();
    test_ordered_array_set_difference5();
}

//============================================================================
void test_ordered_array_set_symmetricDifference1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set resultSet = ordered_array_set_symmetricDifference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_symmetricDifference2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {2, 5, 3, 8, 9, 10}, 6);
    ordered_array_set resultSet = ordered_array_set_symmetricDifference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 9, 10}, 3);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_symmetricDifference3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_symmetricDifference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_symmetricDifference4() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_symmetricDifference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_symmetricDifference5() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {11, 75, 95, 42, 41}, 5);
    ordered_array_set resultSet = ordered_array_set_symmetricDifference(set, set2);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8, 11, 41, 42, 75, 95},10);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_symmetricDifference() {
    test_ordered_array_set_symmetricDifference1();
    test_ordered_array_set_symmetricDifference2();
    test_ordered_array_set_symmetricDifference3();
    test_ordered_array_set_symmetricDifference4();
    test_ordered_array_set_symmetricDifference5();
}

//============================================================================
void test_ordered_array_set_complement1() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set resultSet = ordered_array_set_complement(set2, set);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {}, 0);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_complement2() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {2, 5, 3}, 3);
    ordered_array_set resultSet = ordered_array_set_complement(set2, set);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 8}, 2);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_complement3() {
    ordered_array_set set = ordered_array_set_create_from_array((int[]) {1, 2, 5, 3, 8}, 5);
    ordered_array_set set2 = ordered_array_set_create_from_array((int[]) {}, 0);
    ordered_array_set resultSet = ordered_array_set_complement(set2, set);
    ordered_array_set expectedSet = ordered_array_set_create_from_array((int[]) {1, 2, 3, 5, 8}, 5);
    assert(ordered_array_set_isEqual(resultSet, expectedSet));
    ordered_array_set_delete(set);
    ordered_array_set_delete(set2);
    ordered_array_set_delete(resultSet);
    ordered_array_set_delete(expectedSet);
}

void test_ordered_array_set_complement() {
    test_ordered_array_set_complement1();
    test_ordered_array_set_complement2();
    test_ordered_array_set_complement3();
}


void test() {
    test_ordered_array_set_in();
    test_ordered_array_set_isSubset();
    test_ordered_array_set_insert();
    test_ordered_array_set_delete();
    test_ordered_array_set_union();
    test_ordered_array_set_intersection();
    test_ordered_array_set_difference();
    test_ordered_array_set_symmetricDifference();
    test_ordered_array_set_complement();
}

int main() {
    test();
}